// Generated by view binder compiler. Do not edit!
package com.example.g_fit.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import com.example.g_fit.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityOnBoardingScreenBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button backbtn;

  @NonNull
  public final LinearLayout indicatorLayout;

  @NonNull
  public final Button nextbtn;

  @NonNull
  public final RelativeLayout relativeLayout;

  @NonNull
  public final Button skipbtn;

  @NonNull
  public final ViewPager viewPager;

  private ActivityOnBoardingScreenBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button backbtn, @NonNull LinearLayout indicatorLayout, @NonNull Button nextbtn,
      @NonNull RelativeLayout relativeLayout, @NonNull Button skipbtn,
      @NonNull ViewPager viewPager) {
    this.rootView = rootView;
    this.backbtn = backbtn;
    this.indicatorLayout = indicatorLayout;
    this.nextbtn = nextbtn;
    this.relativeLayout = relativeLayout;
    this.skipbtn = skipbtn;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityOnBoardingScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityOnBoardingScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_on_boarding_screen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityOnBoardingScreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backbtn;
      Button backbtn = ViewBindings.findChildViewById(rootView, id);
      if (backbtn == null) {
        break missingId;
      }

      id = R.id.indicator_layout;
      LinearLayout indicatorLayout = ViewBindings.findChildViewById(rootView, id);
      if (indicatorLayout == null) {
        break missingId;
      }

      id = R.id.nextbtn;
      Button nextbtn = ViewBindings.findChildViewById(rootView, id);
      if (nextbtn == null) {
        break missingId;
      }

      id = R.id.relativeLayout;
      RelativeLayout relativeLayout = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout == null) {
        break missingId;
      }

      id = R.id.skipbtn;
      Button skipbtn = ViewBindings.findChildViewById(rootView, id);
      if (skipbtn == null) {
        break missingId;
      }

      id = R.id.viewPager;
      ViewPager viewPager = ViewBindings.findChildViewById(rootView, id);
      if (viewPager == null) {
        break missingId;
      }

      return new ActivityOnBoardingScreenBinding((ConstraintLayout) rootView, backbtn,
          indicatorLayout, nextbtn, relativeLayout, skipbtn, viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
